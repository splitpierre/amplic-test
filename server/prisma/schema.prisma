datasource postgres {
  provider = "postgresql"
  url      = env("POSTGRESQL_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  address          String     @unique
  createdAt        DateTime   @default(now())
  favoriteProjects Project[]  @relation(name: "ProjectFavoriteProjectsUserFavoriteProjects")
  firstName        String?
  id               String     @id @default(cuid())
  lastName         String?
  password         String
  projects         Project[]  @relation(name: "ProjectsOnUser")
  proposals        Proposal[]
  roles            String[]
  updatedAt        DateTime   @updatedAt
  username         String     @unique
}

model Project {
  categories         Category[]
  createdAt          DateTime   @default(now())
  favoriteProjects   User?      @relation(name: "ProjectFavoriteProjectsUserFavoriteProjects", fields: [favoriteProjectsId], references: [id])
  favoriteProjectsId String?
  id                 String     @id @default(cuid())
  projectDescription String?
  projectIcon        String
  projectName        String
  updatedAt          DateTime   @updatedAt
  user               User?      @relation(name: "ProjectsOnUser", fields: [userId], references: [id])
  userId             String?
}

model Proposal {
  createdAt        DateTime            @default(now())
  id               String              @id @default(cuid())
  longDescription  String?
  project          String?
  shortDescription String?
  status           EnumProposalStatus?
  title            String?
  updatedAt        DateTime            @updatedAt
  user             User?               @relation(fields: [userId], references: [id])
  userId           String?
}

model Category {
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  project   Project? @relation(fields: [projectId], references: [id])
  projectId String?
  slug      String?
  title     String
  updatedAt DateTime @updatedAt
}

enum EnumProposalStatus {
  Active
  Pending
  Closed
}